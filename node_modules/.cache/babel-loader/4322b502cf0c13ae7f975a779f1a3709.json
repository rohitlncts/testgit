{"ast":null,"code":"import _classCallCheck from \"D:\\\\myProject\\\\githubreport\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\myProject\\\\githubreport\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\myProject\\\\githubreport\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\myProject\\\\githubreport\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\myProject\\\\githubreport\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\myProject\\\\githubreport\\\\src\\\\MyTable.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Segment, Label, Button, Input, Container, Header, Table } from \"semantic-ui-react\";\n\nvar MyTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyTable, _Component);\n\n  function MyTable(props) {\n    var _this;\n\n    _classCallCheck(this, MyTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyTable).call(this, props));\n    _this.state = {\n      tableData: []\n    };\n    return _this;\n  }\n\n  _createClass(MyTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        tableData: nextProps.tableData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tableData = this.state.tableData;\n      return React.createElement(Table, {\n        striped: true,\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"S.No.\")), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"IssueID\")), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Issue Title\")), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" Created\")), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Last Updated\"))), tableData && Object.keys(tableData).length > 0 ? tableData.map(function (data, index) {\n        return React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, index + 1), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, data.number), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, data.title), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, data.created_at), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, data.updated_at));\n      }) : React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        colSpan: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"No Record Found\")));\n    }\n  }]);\n\n  return MyTable;\n}(Component);\n\nexport default MyTable;","map":{"version":3,"sources":["D:\\myProject\\githubreport\\src\\MyTable.jsx"],"names":["React","Component","Grid","Segment","Label","Button","Input","Container","Header","Table","MyTable","props","state","tableData","nextProps","setState","Object","keys","length","map","data","index","number","title","created_at","updated_at"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,KARF,QASO,mBATP;;IAWMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFiB;AAKlB;;;;8CACyBC,S,EAAW;AACnC,WAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAEC,SAAS,CAACD;AADT,OAAd;AAGD;;;6BACQ;AACP,UAAIA,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;AACA,aACE,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAJF,EAOE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAPF,EAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAVF,EAaE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAbF,CADF,EAmBGA,SAAS,IAAIG,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,MAAvB,GAAgC,CAA7C,GACCL,SAAS,CAACM,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,eACZ,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaA,KAAK,GAAG,CAArB,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,IAAI,CAACE,MAAlB,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,IAAI,CAACG,KAAlB,CAHF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaH,IAAI,CAACI,UAAlB,CAJF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaJ,IAAI,CAACK,UAAlB,CALF,CADY;AAAA,OAAd,CADD,GAWC,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,QAAtB;AAA+B,QAAA,OAAO,EAAC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA9BJ,CADF,CADF;AAuCD;;;;EArDmBxB,S;;AAwDtB,eAAeS,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  Container,\r\n  Header,\r\n  Table\r\n} from \"semantic-ui-react\";\r\n\r\nclass MyTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: []\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      tableData: nextProps.tableData\r\n    });\r\n  }\r\n  render() {\r\n    let tableData = this.state.tableData;\r\n    return (\r\n      <Table striped color=\"blue\">\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>\r\n              <Header>S.No.</Header>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Header>IssueID</Header>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Header> Issue Title</Header>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Header> Created</Header>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Header> Last Updated</Header>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n\r\n          {tableData && Object.keys(tableData).length > 0 ? (\r\n            tableData.map((data, index) => (\r\n              <Table.Row>\r\n                <Table.Cell>{index + 1}</Table.Cell>\r\n                <Table.Cell>{data.number}</Table.Cell>\r\n                <Table.Cell>{data.title}</Table.Cell>\r\n                <Table.Cell>{data.created_at}</Table.Cell>\r\n                <Table.Cell>{data.updated_at}</Table.Cell>\r\n              </Table.Row>\r\n            ))\r\n          ) : (\r\n            <Table.Cell textAlign=\"center\" colSpan=\"10\">\r\n              No Record Found\r\n            </Table.Cell>\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTable;\r\n"]},"metadata":{},"sourceType":"module"}